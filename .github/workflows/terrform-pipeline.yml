name: 'Terraform GitHub Actions'
on:
  push:
    branches:
      - main
  pull_request:

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  TF_ACTION_WORKING_DIR: '.'

jobs:
  terraform_primary:
    name: 'Terraform - Primary region'
    runs-on: self-hosted

    steps:
      - name: 'Checkout'
        uses: actions/checkout@v2

      - name: 'Terraform Init'
        id: init
        run: terraform init --backend-config=backend-vars/backend-dev-use1.tfvars

      - name: 'Terraform Plan'
        id: plan
        run: terraform plan --var-file=infra-vars/assesment-dev-use1.tfvars
        continue-on-error: false

      - name: 'Terraform Apply'
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: terraform plan --var-file=infra-vars/assesment-dev-use1.tfvars
        
  terraform_secondary:
    name: 'Terraform - Secondary region'
    runs-on: self-hosted
    needs: terraform_primary

    steps:
      - name: 'Checkout'
        uses: actions/checkout@v2

      - name: 'Terraform Init'
        id: init
        run: terraform init --backend-config=backend-vars/backend-dev-use2.tfvars

      - name: 'Terraform Validate'
        id: validate
        run: terraform validate -no-color

      - name: 'Terraform Plan'
        id: plan
        run: terraform plan --var-file=infra-vars/assesment-dev-use2.tfvars
        continue-on-error: false

      # - name: 'Terraform Apply'
      #   if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      #   run: terraform apply -auto-approve -no-color
